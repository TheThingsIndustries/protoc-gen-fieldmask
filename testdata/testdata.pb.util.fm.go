// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package testdata

import (
	"sort"
	"strings"
)

// _cleanPaths cleans the given field mask paths. It returns a sorted slice of
// unique paths without any child paths that are already covered by parent paths.
func _cleanPaths(paths []string) []string {
	unique := make(map[string]struct{}, len(paths))
	for _, path := range paths {
		unique[path] = struct{}{}
	}
	for path := range unique {
		parts := strings.Split(path, ".")
		if len(parts) == 1 {
			continue
		}
		for i := 1; i < len(parts); i++ {
			if _, ok := unique[strings.Join(parts[:1], ".")]; ok {
				delete(unique, path)
			}
		}
	}

	out := make([]string, 0, len(unique))
	for path := range unique {
		out = append(out, path)
	}
	sort.Strings(out)
	return out
}

// _pathsWithoutPrefix returns the paths that contain the given prefix, but
// without that prefix.
func _pathsWithoutPrefix(prefix string, paths []string) []string {
	prefix += "."

	out := make([]string, 0, len(paths))
	for _, path := range paths {
		if !strings.HasPrefix(path, prefix) {
			continue
		}
		out = append(out, strings.TrimPrefix(path, prefix))
	}
	return out
}
