// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: testdata.proto

package testdata

import (
	fmt "fmt"
	github_com_TheThingsIndustries_protoc_gen_fieldmask_testdata_testpackage "github.com/TheThingsIndustries/protoc-gen-fieldmask/testdata/testpackage"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Test struct {
	A          *Test_TestNested `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	CustomName *Test_TestNested `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	C          Test_TestNested  `protobuf:"bytes,3,opt,name=c,proto3" json:"c"`
	// Types that are valid to be assigned to TestOneof:
	//	*Test_D
	//	*Test_CustomNameOneof
	//	*Test_F
	TestOneof            isTest_TestOneof   `protobuf_oneof:"testOneof"`
	G                    *Empty             `protobuf:"bytes,7,opt,name=g,proto3" json:"g,omitempty"`
	H                    *types.StringValue `protobuf:"bytes,8,opt,name=h,proto3" json:"h,omitempty"`
	I                    types.StringValue  `protobuf:"bytes,9,opt,name=i,proto3" json:"i"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{1}
}
func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

type isTest_TestOneof interface {
	isTest_TestOneof()
}

type Test_D struct {
	D int32 `protobuf:"varint,4,opt,name=d,proto3,oneof"`
}
type Test_CustomNameOneof struct {
	CustomNameOneof uint32 `protobuf:"varint,5,opt,name=e,proto3,oneof"`
}
type Test_F struct {
	F []byte `protobuf:"bytes,6,opt,name=f,proto3,oneof"`
}

func (*Test_D) isTest_TestOneof()               {}
func (*Test_CustomNameOneof) isTest_TestOneof() {}
func (*Test_F) isTest_TestOneof()               {}

func (m *Test) GetTestOneof() isTest_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (m *Test) GetA() *Test_TestNested {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Test) GetCustomName() *Test_TestNested {
	if m != nil {
		return m.CustomName
	}
	return nil
}

func (m *Test) GetC() Test_TestNested {
	if m != nil {
		return m.C
	}
	return Test_TestNested{}
}

func (m *Test) GetD() int32 {
	if x, ok := m.GetTestOneof().(*Test_D); ok {
		return x.D
	}
	return 0
}

func (m *Test) GetCustomNameOneof() uint32 {
	if x, ok := m.GetTestOneof().(*Test_CustomNameOneof); ok {
		return x.CustomNameOneof
	}
	return 0
}

func (m *Test) GetF() []byte {
	if x, ok := m.GetTestOneof().(*Test_F); ok {
		return x.F
	}
	return nil
}

func (m *Test) GetG() *Empty {
	if m != nil {
		return m.G
	}
	return nil
}

func (m *Test) GetH() *types.StringValue {
	if m != nil {
		return m.H
	}
	return nil
}

func (m *Test) GetI() types.StringValue {
	if m != nil {
		return m.I
	}
	return types.StringValue{}
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Test) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Test_OneofMarshaler, _Test_OneofUnmarshaler, _Test_OneofSizer, []interface{}{
		(*Test_D)(nil),
		(*Test_CustomNameOneof)(nil),
		(*Test_F)(nil),
	}
}

func _Test_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Test)
	// testOneof
	switch x := m.TestOneof.(type) {
	case *Test_D:
		_ = b.EncodeVarint(4<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.D))
	case *Test_CustomNameOneof:
		_ = b.EncodeVarint(5<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.CustomNameOneof))
	case *Test_F:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		_ = b.EncodeRawBytes(x.F)
	case nil:
	default:
		return fmt.Errorf("Test.TestOneof has unexpected type %T", x)
	}
	return nil
}

func _Test_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Test)
	switch tag {
	case 4: // testOneof.d
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TestOneof = &Test_D{int32(x)}
		return true, err
	case 5: // testOneof.e
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TestOneof = &Test_CustomNameOneof{uint32(x)}
		return true, err
	case 6: // testOneof.f
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.TestOneof = &Test_F{x}
		return true, err
	default:
		return false, nil
	}
}

func _Test_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Test)
	// testOneof
	switch x := m.TestOneof.(type) {
	case *Test_D:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.D))
	case *Test_CustomNameOneof:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.CustomNameOneof))
	case *Test_F:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.F)))
		n += len(x.F)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Test_TestNested struct {
	A                    *Test_TestNested_TestNestedNested                                                    `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    []byte                                                                               `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	C                    *time.Duration                                                                       `protobuf:"bytes,3,opt,name=c,proto3,stdduration" json:"c,omitempty"`
	D                    *time.Time                                                                           `protobuf:"bytes,4,opt,name=d,proto3,stdtime" json:"d,omitempty"`
	E                    *github_com_TheThingsIndustries_protoc_gen_fieldmask_testdata_testpackage.CustomType `protobuf:"bytes,5,opt,name=e,proto3,customtype=github.com/TheThingsIndustries/protoc-gen-fieldmask/testdata/testpackage.CustomType" json:"e,omitempty"`
	F                    github_com_TheThingsIndustries_protoc_gen_fieldmask_testdata_testpackage.CustomType  `protobuf:"bytes,6,opt,name=f,proto3,customtype=github.com/TheThingsIndustries/protoc-gen-fieldmask/testdata/testpackage.CustomType" json:"f"`
	XXX_NoUnkeyedLiteral struct{}                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                `json:"-"`
}

func (m *Test_TestNested) Reset()         { *m = Test_TestNested{} }
func (m *Test_TestNested) String() string { return proto.CompactTextString(m) }
func (*Test_TestNested) ProtoMessage()    {}
func (*Test_TestNested) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{1, 0}
}
func (m *Test_TestNested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_TestNested.Unmarshal(m, b)
}
func (m *Test_TestNested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_TestNested.Marshal(b, m, deterministic)
}
func (m *Test_TestNested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_TestNested.Merge(m, src)
}
func (m *Test_TestNested) XXX_Size() int {
	return xxx_messageInfo_Test_TestNested.Size(m)
}
func (m *Test_TestNested) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_TestNested.DiscardUnknown(m)
}

var xxx_messageInfo_Test_TestNested proto.InternalMessageInfo

func (m *Test_TestNested) GetA() *Test_TestNested_TestNestedNested {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *Test_TestNested) GetB() []byte {
	if m != nil {
		return m.B
	}
	return nil
}

func (m *Test_TestNested) GetC() *time.Duration {
	if m != nil {
		return m.C
	}
	return nil
}

func (m *Test_TestNested) GetD() *time.Time {
	if m != nil {
		return m.D
	}
	return nil
}

type Test_TestNested_TestNestedNested struct {
	A int32            `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B int64            `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	C [][]byte         `protobuf:"bytes,3,rep,name=c,proto3" json:"c,omitempty"`
	D map[int32]uint32 `protobuf:"bytes,4,rep,name=d,proto3" json:"d,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to TestNestedNestedOneOf:
	//	*Test_TestNested_TestNestedNested_E
	//	*Test_TestNested_TestNestedNested_F
	//	*Test_TestNested_TestNestedNested_G
	TestNestedNestedOneOf                                   isTest_TestNested_TestNestedNested_TestNestedNestedOneOf `protobuf_oneof:"testNestedNestedOneOf"`
	*Test_TestNested_TestNestedNested_TestNestedNestedEmbed `protobuf:"bytes,8,opt,name=h,proto3,embedded=h" json:"h,omitempty"`
	XXX_NoUnkeyedLiteral                                    struct{} `json:"-"`
	XXX_unrecognized                                        []byte   `json:"-"`
	XXX_sizecache                                           int32    `json:"-"`
}

func (m *Test_TestNested_TestNestedNested) Reset()         { *m = Test_TestNested_TestNestedNested{} }
func (m *Test_TestNested_TestNestedNested) String() string { return proto.CompactTextString(m) }
func (*Test_TestNested_TestNestedNested) ProtoMessage()    {}
func (*Test_TestNested_TestNestedNested) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{1, 0, 0}
}
func (m *Test_TestNested_TestNestedNested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_TestNested_TestNestedNested.Unmarshal(m, b)
}
func (m *Test_TestNested_TestNestedNested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_TestNested_TestNestedNested.Marshal(b, m, deterministic)
}
func (m *Test_TestNested_TestNestedNested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_TestNested_TestNestedNested.Merge(m, src)
}
func (m *Test_TestNested_TestNestedNested) XXX_Size() int {
	return xxx_messageInfo_Test_TestNested_TestNestedNested.Size(m)
}
func (m *Test_TestNested_TestNestedNested) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_TestNested_TestNestedNested.DiscardUnknown(m)
}

var xxx_messageInfo_Test_TestNested_TestNestedNested proto.InternalMessageInfo

type isTest_TestNested_TestNestedNested_TestNestedNestedOneOf interface {
	isTest_TestNested_TestNestedNested_TestNestedNestedOneOf()
}

type Test_TestNested_TestNestedNested_E struct {
	E *Empty `protobuf:"bytes,5,opt,name=e,proto3,oneof"`
}
type Test_TestNested_TestNestedNested_F struct {
	F uint32 `protobuf:"varint,6,opt,name=f,proto3,oneof"`
}
type Test_TestNested_TestNestedNested_G struct {
	G *types.UInt64Value `protobuf:"bytes,7,opt,name=g,proto3,oneof"`
}

func (*Test_TestNested_TestNestedNested_E) isTest_TestNested_TestNestedNested_TestNestedNestedOneOf() {
}
func (*Test_TestNested_TestNestedNested_F) isTest_TestNested_TestNestedNested_TestNestedNestedOneOf() {
}
func (*Test_TestNested_TestNestedNested_G) isTest_TestNested_TestNestedNested_TestNestedNestedOneOf() {
}

func (m *Test_TestNested_TestNestedNested) GetTestNestedNestedOneOf() isTest_TestNested_TestNestedNested_TestNestedNestedOneOf {
	if m != nil {
		return m.TestNestedNestedOneOf
	}
	return nil
}

func (m *Test_TestNested_TestNestedNested) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Test_TestNested_TestNestedNested) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *Test_TestNested_TestNestedNested) GetC() [][]byte {
	if m != nil {
		return m.C
	}
	return nil
}

func (m *Test_TestNested_TestNestedNested) GetD() map[int32]uint32 {
	if m != nil {
		return m.D
	}
	return nil
}

func (m *Test_TestNested_TestNestedNested) GetE() *Empty {
	if x, ok := m.GetTestNestedNestedOneOf().(*Test_TestNested_TestNestedNested_E); ok {
		return x.E
	}
	return nil
}

func (m *Test_TestNested_TestNestedNested) GetF() uint32 {
	if x, ok := m.GetTestNestedNestedOneOf().(*Test_TestNested_TestNestedNested_F); ok {
		return x.F
	}
	return 0
}

func (m *Test_TestNested_TestNestedNested) GetG() *types.UInt64Value {
	if x, ok := m.GetTestNestedNestedOneOf().(*Test_TestNested_TestNestedNested_G); ok {
		return x.G
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Test_TestNested_TestNestedNested) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Test_TestNested_TestNestedNested_OneofMarshaler, _Test_TestNested_TestNestedNested_OneofUnmarshaler, _Test_TestNested_TestNestedNested_OneofSizer, []interface{}{
		(*Test_TestNested_TestNestedNested_E)(nil),
		(*Test_TestNested_TestNestedNested_F)(nil),
		(*Test_TestNested_TestNestedNested_G)(nil),
	}
}

func _Test_TestNested_TestNestedNested_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Test_TestNested_TestNestedNested)
	// testNestedNestedOneOf
	switch x := m.TestNestedNestedOneOf.(type) {
	case *Test_TestNested_TestNestedNested_E:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.E); err != nil {
			return err
		}
	case *Test_TestNested_TestNestedNested_F:
		_ = b.EncodeVarint(6<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.F))
	case *Test_TestNested_TestNestedNested_G:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.G); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Test_TestNested_TestNestedNested.TestNestedNestedOneOf has unexpected type %T", x)
	}
	return nil
}

func _Test_TestNested_TestNestedNested_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Test_TestNested_TestNestedNested)
	switch tag {
	case 5: // testNestedNestedOneOf.e
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.TestNestedNestedOneOf = &Test_TestNested_TestNestedNested_E{msg}
		return true, err
	case 6: // testNestedNestedOneOf.f
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TestNestedNestedOneOf = &Test_TestNested_TestNestedNested_F{uint32(x)}
		return true, err
	case 7: // testNestedNestedOneOf.g
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types.UInt64Value)
		err := b.DecodeMessage(msg)
		m.TestNestedNestedOneOf = &Test_TestNested_TestNestedNested_G{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Test_TestNested_TestNestedNested_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Test_TestNested_TestNestedNested)
	// testNestedNestedOneOf
	switch x := m.TestNestedNestedOneOf.(type) {
	case *Test_TestNested_TestNestedNested_E:
		s := proto.Size(x.E)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Test_TestNested_TestNestedNested_F:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.F))
	case *Test_TestNested_TestNestedNested_G:
		s := proto.Size(x.G)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Test_TestNested_TestNestedNested_TestNestedNestedEmbed struct {
	NestedField          int32    `protobuf:"varint,1,opt,name=nested_field,json=nestedField,proto3" json:"nested_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) Reset() {
	*m = Test_TestNested_TestNestedNested_TestNestedNestedEmbed{}
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) String() string {
	return proto.CompactTextString(m)
}
func (*Test_TestNested_TestNestedNested_TestNestedNestedEmbed) ProtoMessage() {}
func (*Test_TestNested_TestNestedNested_TestNestedNestedEmbed) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c4782d007dfce9, []int{1, 0, 0, 1}
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed.Unmarshal(m, b)
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed.Marshal(b, m, deterministic)
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed.Merge(m, src)
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) XXX_Size() int {
	return xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed.Size(m)
}
func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed.DiscardUnknown(m)
}

var xxx_messageInfo_Test_TestNested_TestNestedNested_TestNestedNestedEmbed proto.InternalMessageInfo

func (m *Test_TestNested_TestNestedNested_TestNestedNestedEmbed) GetNestedField() int32 {
	if m != nil {
		return m.NestedField
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "testdata.Empty")
	proto.RegisterType((*Test)(nil), "testdata.Test")
	proto.RegisterType((*Test_TestNested)(nil), "testdata.Test.TestNested")
	proto.RegisterType((*Test_TestNested_TestNestedNested)(nil), "testdata.Test.TestNested.TestNestedNested")
	proto.RegisterMapType((map[int32]uint32)(nil), "testdata.Test.TestNested.TestNestedNested.DEntry")
	proto.RegisterType((*Test_TestNested_TestNestedNested_TestNestedNestedEmbed)(nil), "testdata.Test.TestNested.TestNestedNested.TestNestedNestedEmbed")
}

func init() { proto.RegisterFile("testdata.proto", fileDescriptor_40c4782d007dfce9) }

var fileDescriptor_40c4782d007dfce9 = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xbb, 0xcd, 0x47, 0x9b, 0x4d, 0xda, 0x46, 0x0b, 0x15, 0xae, 0x05, 0x38, 0x94, 0x03,
	0x51, 0x44, 0x1c, 0x08, 0x15, 0x94, 0x82, 0x00, 0x99, 0x16, 0xd1, 0x4b, 0x2b, 0xb9, 0x01, 0x24,
	0x38, 0xa0, 0x4d, 0xbc, 0xde, 0x58, 0x8d, 0x3f, 0x64, 0xaf, 0x8b, 0xf2, 0x16, 0x1c, 0x79, 0x06,
	0x1e, 0x81, 0x13, 0x37, 0x10, 0x27, 0xce, 0x1c, 0x5c, 0xa9, 0x37, 0xde, 0x02, 0xed, 0x6e, 0x8c,
	0x83, 0x43, 0x55, 0x10, 0xe2, 0x62, 0xcd, 0xec, 0xcc, 0xec, 0x78, 0x7e, 0xf3, 0x5f, 0xb8, 0xcc,
	0x48, 0xc4, 0x2c, 0xcc, 0xb0, 0x1e, 0x84, 0x3e, 0xf3, 0xd1, 0x62, 0xea, 0xab, 0x6d, 0xea, 0xb0,
	0x61, 0xdc, 0xd7, 0x07, 0xbe, 0xdb, 0xa1, 0x3e, 0xf5, 0x3b, 0x22, 0xa1, 0x1f, 0xdb, 0xc2, 0x13,
	0x8e, 0xb0, 0x64, 0xa1, 0x7a, 0x6f, 0x2a, 0x7d, 0x34, 0xb6, 0x99, 0x4c, 0x1f, 0xb4, 0x29, 0xf1,
	0xda, 0x47, 0x78, 0xe4, 0x58, 0x98, 0x91, 0xce, 0x8c, 0x31, 0x29, 0xbe, 0x4c, 0x7d, 0x9f, 0x8e,
	0x48, 0xd6, 0xc2, 0x8a, 0x43, 0xcc, 0x1c, 0xdf, 0x9b, 0xc4, 0xb5, 0x7c, 0x9c, 0x39, 0x2e, 0x89,
	0x18, 0x76, 0x83, 0xd3, 0x2e, 0x78, 0x13, 0xe2, 0x20, 0x20, 0x61, 0x24, 0xe3, 0xeb, 0x0b, 0xb0,
	0xb4, 0xe3, 0x06, 0x6c, 0xbc, 0xfe, 0xa9, 0x02, 0x8b, 0x3d, 0x12, 0x31, 0x74, 0x0d, 0x02, 0xac,
	0x80, 0x06, 0x68, 0x56, 0xbb, 0x6b, 0xfa, 0x4f, 0x08, 0x3c, 0x24, 0x3e, 0x7b, 0x24, 0x62, 0xc4,
	0x32, 0x01, 0x46, 0x77, 0x20, 0xe8, 0x2b, 0xf3, 0x67, 0x24, 0x1a, 0xcb, 0x27, 0x89, 0x06, 0x1f,
	0xc7, 0x11, 0xf3, 0xdd, 0x3d, 0xec, 0x12, 0x13, 0xf4, 0x51, 0x1b, 0x82, 0x81, 0x52, 0x38, 0xab,
	0xb0, 0xf8, 0x39, 0xd1, 0xe6, 0x4c, 0x30, 0x40, 0xcb, 0x10, 0x58, 0x4a, 0xb1, 0x01, 0x9a, 0xa5,
	0xa7, 0x73, 0x26, 0xb0, 0xd0, 0x55, 0x08, 0x88, 0x52, 0x6a, 0x80, 0xe6, 0x92, 0x71, 0xee, 0x24,
	0xd1, 0x56, 0xb2, 0xcb, 0xf7, 0x3d, 0xe2, 0xdb, 0x3c, 0x89, 0xf0, 0x22, 0x5b, 0x29, 0x37, 0x40,
	0xb3, 0xc6, 0x7d, 0x1b, 0x5d, 0x82, 0x80, 0x2a, 0x0b, 0xa2, 0xe7, 0x4a, 0xd6, 0x53, 0x8c, 0x6e,
	0x02, 0x8a, 0x5a, 0x10, 0x0c, 0x95, 0x45, 0x11, 0xbe, 0xa8, 0x4b, 0x64, 0x7a, 0x8a, 0x4c, 0x3f,
	0x60, 0xa1, 0xe3, 0xd1, 0xe7, 0x78, 0x14, 0x13, 0x13, 0x0c, 0xd1, 0x0d, 0x08, 0x1c, 0xa5, 0x72,
	0x76, 0x6e, 0x3a, 0x81, 0xa3, 0x26, 0x65, 0x08, 0xb3, 0xc9, 0xd0, 0x66, 0x46, 0xb8, 0x75, 0xea,
	0xfc, 0x53, 0x66, 0x86, 0xbc, 0x96, 0x22, 0xaf, 0x71, 0x8e, 0x77, 0xa7, 0x39, 0xe6, 0x7f, 0x64,
	0x7b, 0x22, 0x14, 0xa3, 0xfe, 0xee, 0x58, 0x03, 0x1f, 0xbe, 0x7f, 0x2c, 0x2c, 0xbc, 0x07, 0xc5,
	0xee, 0xfc, 0x62, 0x8b, 0x33, 0xd5, 0x53, 0xa6, 0xd5, 0xae, 0x3a, 0x53, 0xda, 0x4b, 0x35, 0x64,
	0x14, 0xdf, 0x1e, 0x6b, 0x80, 0x33, 0x27, 0x29, 0xf3, 0x8a, 0xf1, 0xe2, 0x5b, 0xa2, 0x1d, 0x4c,
	0x69, 0xba, 0x37, 0x24, 0xbd, 0xa1, 0xe3, 0xd1, 0x68, 0xd7, 0xb3, 0xe2, 0x88, 0x85, 0x0e, 0x89,
	0xa6, 0x25, 0x6e, 0x3b, 0x64, 0x64, 0xb9, 0x38, 0x3a, 0xec, 0xa4, 0x93, 0x0a, 0x23, 0xc0, 0x83,
	0x43, 0x4c, 0x89, 0x2e, 0x97, 0xd7, 0x1b, 0x07, 0x84, 0x6f, 0xcd, 0x49, 0xb7, 0x56, 0x31, 0x5e,
	0x71, 0x78, 0xff, 0xad, 0x95, 0xad, 0x7e, 0x29, 0xc0, 0x7a, 0x1e, 0x31, 0x5a, 0x4b, 0x37, 0x53,
	0x32, 0xaa, 0x1c, 0x59, 0x59, 0x2d, 0x2a, 0xad, 0x86, 0xf2, 0x0b, 0xfa, 0x3a, 0x47, 0x5f, 0x93,
	0xe8, 0x0b, 0x7c, 0x11, 0x03, 0xf4, 0x50, 0xd2, 0x2c, 0x34, 0xab, 0xdd, 0x9b, 0x7f, 0xbe, 0x50,
	0x7d, 0x7b, 0xc7, 0x63, 0xe1, 0x98, 0xe3, 0xd5, 0x52, 0xbc, 0xb3, 0xea, 0xcc, 0xc9, 0x79, 0x49,
	0xca, 0xf9, 0x7a, 0x26, 0xe7, 0x59, 0x0d, 0x3e, 0xdb, 0xf5, 0xd8, 0xed, 0x0d, 0xa1, 0x41, 0x9e,
	0x4d, 0x51, 0x2f, 0x53, 0xf7, 0xa3, 0xbf, 0xf8, 0xbf, 0xfc, 0xc1, 0x8e, 0xdb, 0xe7, 0xef, 0xf2,
	0x6b, 0xc2, 0x35, 0x31, 0x54, 0x37, 0x60, 0x59, 0x4e, 0x80, 0xea, 0xb0, 0x70, 0x48, 0xc6, 0x12,
	0x9c, 0xc9, 0x4d, 0x74, 0x1e, 0x96, 0x8e, 0x78, 0x7f, 0x41, 0x6c, 0xc9, 0x94, 0xce, 0xd6, 0xfc,
	0x26, 0x50, 0xb7, 0xe0, 0xea, 0x6f, 0xef, 0x45, 0x57, 0x60, 0xcd, 0x13, 0xee, 0x6b, 0xb1, 0xc7,
	0xc9, 0x6d, 0x55, 0x79, 0xf6, 0x84, 0x1f, 0x19, 0x17, 0xe0, 0x2a, 0xcb, 0xd5, 0xee, 0x7b, 0x64,
	0xdf, 0x36, 0xaa, 0xb0, 0xc2, 0x03, 0xe2, 0xfd, 0x1b, 0x0f, 0x5e, 0xde, 0xff, 0x17, 0xcd, 0xf4,
	0xcb, 0x22, 0x7c, 0xeb, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xb9, 0x87, 0x9f, 0x02, 0x06,
	0x00, 0x00,
}
